import json

from channels.generic.websocket import AsyncWebsocketConsumer


class SimpleConsumer(AsyncWebsocketConsumer):
    async def connect(self):
        if self.scope["user"].is_authenticated:
            await self.accept()
            print(f"üü¢ WebSocket –ø–æ–¥–∫–ª—é—á—ë–Ω –¥–ª—è {self.scope['user'].username}")
            await self.send(text_data=json.dumps({"message": "Connected!"}))
        else:
            print("‚ùå –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø")
            await self.close(code=4000)

    async def disconnect(self, close_code):
        print(f"üî¥  WebSocket disconnected: {close_code}")

    async def receive(self, text_data):
        if not self.scope["user"].is_authenticated:
            await self.close(code=4000)
            return
        print(f"üü° –ü–æ–ª—É—á–µ–Ω–æ: {text_data}")
        data = json.loads(text_data)
        msg = data.get("message", "")
        if msg.strip() == "/stop":
            print("‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª /stop")
            await self.close()
            return
        response = {"message": f"You say: {msg}"}
        print(f"üü¢ –û—Ç–ø—Ä–∞–≤–∫–∞: {response}")
        await self.send(text_data=json.dumps(response))
